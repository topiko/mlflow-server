events {}

http {
    server {
        listen 443 ssl;

	ssl_certificate /etc/letsencrypt/live/ml.twohands.dev/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/ml.twohands.dev/privkey.pem;
        server_name ml.twohands.dev;

	auth_basic "Restricted";
        auth_basic_user_file /etc/nginx/htpasswd/users;


        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        location / {

            proxy_pass http://mlflow_server:5000;

            proxy_http_version 1.1;
            proxy_request_buffering off;
            proxy_buffering off;

            # Allow large uploads/downloads
            client_max_body_size 500M;

            # Avoid buffering/chunk issues
            proxy_set_header Connection "";

            proxy_read_timeout 600;
            proxy_send_timeout 600;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

        }
    }

    # Optional: redirect HTTP to HTTPS
    server {
        listen 80;
        server_name ml.twohands.dev;
        return 301 https://$host$request_uri;


	# ACME challenge location
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect everything else to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

}
